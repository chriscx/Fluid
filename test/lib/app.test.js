// Generated by CoffeeScript 1.7.1
var mongoose, request, should;

mongoose = require('mongoose');

should = require('should');

request = require('request');

describe('app', function() {
  before(function(next) {
    if (!mongoose.connection.readyState) {
      return mongoose.connect('mongodb://localhost/fluiddb_dev', null, function() {
        return next();
      });
    }
  });
  after(function(next) {
    return mongoose.disconnect(function() {
      return next();
    });
  });
  it('should get index page', function(next) {
    return request('http://localhost:3333/', function(err, res, body) {
      res.statusCode.should.be.eql(200);
      return next();
    });
  });
  it('should get login page', function(next) {
    return request('http://localhost:3333/login', function(err, res, body) {
      res.statusCode.should.be.eql(200);
      return next();
    });
  });
  it('should post login page', function(next) {
    return next();
  });
  it('should get logout page', function(next) {
    return request('http://localhost:3333/logout', function(err, res, body) {
      res.statusCode.should.be.eql(200);
      return next();
    });
  });
  it('should get admin page', function(next) {
    return request('http://localhost:3333/admin', function(err, res, body) {
      res.statusCode.should.be.eql(200);
      return next();
    });
  });
  it('should get blog page', function(next) {
    return request('http://localhost:3333/blog', function(err, res, body) {
      res.statusCode.should.be.eql(200);
      return next();
    });
  });
  it('should get blog post page', function(next) {
    return next();
  });
  it('should get blog entries by pagination', function(next) {
    return next();
  });
  it('should get blog entries by tag', function(next) {
    return next();
  });
  it('should get blog entries by category', function(next) {
    return next();
  });
  it('should post new blog entry', function(next) {
    return next();
  });
  it('should del blog entry', function(next) {
    return next();
  });
  it('should put blog entry', function(next) {
    return next();
  });
  return it('should get error page', function(next) {
    return request('http://localhost:3333/error/404', function(err, res, body) {
      res.statusCode.should.be.eql(200);
      return next();
    });
  });
});
