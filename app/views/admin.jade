extends layout
block append content

  script(type='text/javascript').

    var FluidApp = angular.module('FluidApp', []);

    FluidApp.service('PostService', function() {

      this.addNewPost = function() {
        var node, title;
        node = document.createElement('option');
        title = document.getElementById('input_add_post').value
        node.setAttribute('value', getSlug(title));
        node.innerHTML = title;
        document.getElementById('select_post').appendChild(node);
        document.getElementById('input_add_post').value = '';
      }

      this.createPost = function() {

        var title, data;

        title = document.getElementById('input_post_title').value;

        data = {
          title: title,
          id: getSlug(title),
          body: '',
          tags: [],
          category: '',
          comments: [],
          creationDate: (new Date()).getTime(),
          updateDate: null,
          published: true
        };

        $.post('/blog/post/' + getSlug(title), data, function() {
          console.log('POST success');
        });
      }

      this.savePost = function() {

        var title, data;

        title = document.getElementById('input_post_title').value;

        data = {
          title: '',
          id: getSlug(''),
          body: '',
          tags: [],
          category: '',
          updateDate: (new Date()).getTime(),
          published: true
        };

        $.put('/blog/post/' + getSlug(title), function() {
          console.log('PUT success');
        });
      }

      this.deletePost = function() {
        var title = document.getElementById('input_post_title').value;
        $.del('/blog/post/' + getSlug(title),  function() {
          console.log('DEL success');
        });
      }
    });

    FluidApp.service('PageService', function() {

      this.addNewPage = function() {
        var node, title;
        node = document.createElement('option');
        title = document.getElementById('input_add_page').value
        node.setAttribute('value', getSlug(title));
        node.innerHTML = title;
        document.getElementById('select_page').appendChild(node);
        document.getElementById('input_add_page').value = '';
      }

      this.createPage = function() {
        var route, data, title;
        route = document.getElementById('input_page_route').value;
        title = document.getElementById('input_page_title').value;

        data = {
          title: title,
          route: route,
          body: '',
          creationDate: (new Date()).getTime(),
          updateDate: null,
          published: true
        }
        $.post(route, function() {
          console.log('POST success');
        });
      }

      this.savePage = function() {
        var route, data, title;
        route = document.getElementById('input_page_route').value;
        title = document.getElementById('input_page_title').value;

        data = {
          title: title,
          route: route,
          body: '',
          updateDate: (new Date()).getTime(),
          published: true
        }
        $.put(route, function() {
          console.log('PUT success');
        });
      }

      function deletePage() {
      var route = document.getElementById('input_page_route').value;
        $.del(route,  function() {
          console.log('PUT success');
        });
      }
    });

    FluidApp.controller('AdminController',function($scope, PostService, PageService) {

      $.get('/blog/posts/0/100/posts.json', function(data) {
        $scope.$apply(function(){
          $scope.posts = data.entries;
        });
      });

      $scope.addNewPost = function() {
        PostService.addNewPost();
      }

      $scope.createPost = function() {
        PostService.createPost();
      }

      $scope.savePost = function() {
        PostService.savePost();
      }

      $scope.deletePost = function() {
        PostService.deletePost();
      }

      $scope.addNewPage = function() {
        PageService.addNewPage();
      }

      $scope.createPage = function() {
        PageService.createPage();
      }

      $scope.savePage = function() {
        PageService.savePage();
      }

      $scope.deletePage = function() {
        PageService.deletePage();
      }
    });

  .container-fluid
    .row
      .col-md-8.col-md-offset-2
        .row(ng-controller='AdminController')
          .col-md-12
            .input-group
              input.form-control(type='text' id='input_add_post')
              span.input-group-btn
                button.btn.btn-default(type='button' ng-click='addNewPost()') Add
          .col-md-12
            select.form-control(id='select_post')
              option(ng-repeat='post in posts | orderBy:sortingOrder:reverse' value='{{post.id}}') {{post.title}}
          .col-md-12
            input.form-control(type='text' placeholder='Title' id='input_post_title')
            input.form-control(type='tags' placeholder='Tags' id='input_post_tags')
            select.form-control(id='select_category')
              option(ng-repeat='category in categories | orderBy:sortingOrder:reverse' value='{{category.name}}') {{category.name}}
          .col-md-12
            textarea.form-control(rows='15' placeholder="Write your content here...")
            button.btn.btn-default(type='button') Save
            button.btn.btn-default(type='button') Delete
            button.btn.btn-default(type='button') Publish
          .col-md-12
            select.form-control(id='select_page')
              option(value='{{id}}') {{title}} title
          .col-md-12
            .input-group
              input.form-control(type='text' id='input_add_page')
              span.input-group-btn
                button.btn.btn-default(type='button' ng-click='addNewPage()') Add
            input.form-control(type='title' placeholder='Title' id='input_page_title')
            input.form-control(type='route' placeholder='Route' id='input_page_route')

            textarea.form-control(rows='15' placeholder="Write your post here...")
            button.btn.btn-default(type='button') Save
            button.btn.btn-default(type='button') Delete
            button.btn.btn-default(type='button') Publish
