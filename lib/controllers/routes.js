// Generated by CoffeeScript 1.7.1
var config, eventEmitter, sha1;

config = require('../config');

sha1 = require('sha1');

eventEmitter = require('events').EventEmitter;

module.exports = {
  blog: function(app) {
    app.get('/blog', function(req, res) {
      return res.render('blog');
    });
    app.get('/blog/posts/:l/:s.json', function(req, res) {});
    app.get('/blog/post/:uri.json', function(req, res) {});
    app.post('/blog/post/create.json', function(req, res) {});
    app.put('/blog/post/:id.json', function(req, res) {});
    app.del('/blog/post/:id.json', function(req, res) {
      return blog.removeEntry(req.params.id, function(err, data) {
        if (data > 0 && !err) {
          return res.json({
            result: 'OK'
          });
        } else {
          return res.json({
            result: 'error',
            err: err
          });
        }
      });
    });
    app.get('/blog/tag/:name.json', function(req, res) {});
    return app.get('/blog/category/:name.json', function(req, res) {});
  },
  site: function(app) {
    var i, _results;
    _results = [];
    for (i in config.routes) {
      _results.push(app.get(config.routes[i].path, function(req, res) {
        return res.render(config.routes[i].view, {
          title: config.title,
          config: config,
          request: req
        });
      }));
    }
    return _results;
  },
  login: function(app) {},
  error: function(app) {
    return app.get('/error/:error', function(req, res) {
      return res.render('error');
    });
  }
};
